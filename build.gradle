buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "com.badlogicgames.gdx:gdx-tools:1.12.0"
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "ElectricitySimulator"
        gdxVersion = '1.12.0'
        roboVMVersion = '2.3.19'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        implementation 'gov.nist.math:jama:1.0.3'
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        
    }
}

// Store the parameters you want to pass the texturePacker here...
project.ext.texturePacker = [ "assets/textures/", "assets/atlases/", "main" ]

// Import the texture packer

import com.badlogic.gdx.graphics.Texture
import com.badlogic.gdx.tools.texturepacker.TexturePacker

// Add a new task that packs the textures for you
tasks.register('texturePacker') {
    doLast {
        if (project.ext.has('texturePacker')) {
            logger.info "Calling TexturePacker: " + texturePacker
            TexturePacker.Settings settings = new TexturePacker.Settings()
            settings.duplicatePadding = true
            settings.pot = false
            settings.filterMin = Texture.TextureFilter.Linear
            settings.combineSubdirectories = true
            TexturePacker.process(settings, texturePacker[0], texturePacker[1], texturePacker[2])
        }
    }
}

